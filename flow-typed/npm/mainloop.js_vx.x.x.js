// flow-typed signature: 4029bded4120e86d1846129f123d8900
// flow-typed version: <<STUB>>/mainloop.js_v1.0.4/flow_v0.89.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'mainloop.js'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module "mainloop.js" {
  declare export type BeginCallback = () => void;
  declare export type DrawCallback = (interpolationPercentage: number) => void;
  declare export type EndCallback = (fps: number, isPanicked: boolean) => void;
  declare export type UpdateCallback = number => void;

  declare class MainLoop {
    // Returns the exponential moving average of the frames per second.
    getFPS(): number;

    // Gets the maximum frame rate.
    getMaxAllowedFPS(): number;

    // Gets how many milliseconds should be simulated by every run of update
    getSimulationTimestep(): number;

    // Returns whether the main loop is currently running.
    isRunning(): boolean;

    // Reset the amount of time that has not yet been simulated to zero.
    resetFrameDelta(): boolean;

    // the begin function runs at the beginning of each frame and is typically
    // used to process input.
    setBegin(BeginCallback): MainLoop;

    // the draw function should update the screen, usually by changing the DOM
    // or painting a canvas.
    setDraw(DrawCallback): MainLoop;

    // the end function runs at the end of each frame and is typically used
    // for cleanup tasks such as adjusting the visual quality based on the
    // frame rate.
    setEnd(EndCallback): MainLoop;

    // Sets a maximum frame rate.
    setMaxAllowedFPS(number): MainLoop;

    // the update function runs zero or more times per frame depending on the
    // frame rate. It is used to compute anything affected by time - typically
    // physics and AI movements.
    setUpdate(UpdateCallback): MainLoop;

    // Starts the main loop.
    start(): MainLoop;

    // Stops the main loop.
    stop(): MainLoop;
  }

  declare module.exports: MainLoop;
}
